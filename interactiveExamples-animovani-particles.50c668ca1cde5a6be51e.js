(()=>{"use strict";var e,n={2828:(e,n,t)=>{var i=t(9477);const o=document.createElement("canvas");o.classList.add("webgl-canvas");const r=new i.CP7({canvas:o});r.setPixelRatio(window.devicePixelRatio);const a=r,s=new class{constructor(){this.initialized=!1,this._activeExample=null,this._clock=new i.SUY(!1),this._tick=this._tick.bind(this),window.addEventListener("resize",this._resize.bind(this))}init(){a.setAnimationLoop(this._tick),this.initialized=!0}playExample(e){this.initialized&&(e.playButton.style.display="none",e.resetButton.style.display="flex",this.resetExample(),this._clock.start(),e.canvasContainer.appendChild(o),this._activeExample=e,this._resize(),e.initialized||(e.initialized=!0,e.onInit?.()),e.onPlay?.())}resetExample(){this._activeExample&&(this._clock.stop(),this._activeExample.playButton.style.display="flex",this._activeExample.resetButton.style.display="none",this._activeExample.canvasContainer.removeChild(o),this._activeExample.onReset?.(),this._activeExample=null)}_tick(){if(this._activeExample){const e=this._clock.getDelta(),n=this._clock.getElapsedTime();this._activeExample.onTick?.(e,n)}}_resize(){this._activeExample&&(this._activeExample.camera&&(this._activeExample.camera.aspect=this._activeExample.canvasContainer.clientWidth/this._activeExample.canvasContainer.clientHeight,this._activeExample.camera.updateProjectionMatrix()),a.setSize(this._activeExample.canvasContainer.clientWidth,this._activeExample.canvasContainer.clientHeight),a.setPixelRatio(Math.min(window.devicePixelRatio,2)),this._activeExample.onResize?.(this._activeExample.canvasContainer.clientWidth,this._activeExample.canvasContainer.clientHeight))}},l=class{constructor(e,n){this.initialized=!1,this.camera=n;const t=document.querySelector(`[data-example-id="${e}"]`);if(!t)throw new Error("Example element wasn't found");t.classList.add("interactive-example");const i=document.createElement("div");i.classList.add("interactive-example__header"),t.appendChild(i);const o=document.createElement("div");o.classList.add("interactive-example__icon"),o.innerHTML='\n            <svg>\n                <use xlink:href="../../static/img/icon-sprite.svg#icon-embed2"></use>\n            </svg>\n        ',i.appendChild(o);const r=document.createElement("button");r.classList.add("interactive-example__button"),r.innerHTML='\n            <svg>\n                <use xlink:href="../../static/img/icon-sprite.svg#icon-play"></use>\n            </svg>\n            <span>Spustit</span>\n        ',i.appendChild(r);const a=document.createElement("button");a.classList.add("interactive-example__button"),a.innerHTML='\n            <svg>\n                <use xlink:href="../../static/img/icon-sprite.svg#icon-spinner11"></use>\n            </svg>\n            <span>Resetovat</span>\n        ',a.style.display="none",i.appendChild(a);const l=document.createElement("div");l.classList.add("interactive-example__canvas-container"),t.appendChild(l),r.addEventListener("click",(()=>s.playExample(this))),a.addEventListener("click",(()=>s.resetExample())),this.playButton=r,this.resetButton=a,this.canvasContainer=l}get renderer(){return a}get canvas(){return o}};var c=t(9365);let d;const v=new i.cPb(45,1,.1,1e3);let p;const u=new l(1,v);let m;u.onInit=()=>{d=new i.xsS,v.position.z=3,d.add(v);const e=new i.u9r,n=new Float32Array(300),t=new Float32Array(300);for(let e=0;e<n.length;e++)n[e]=10*(Math.random()-.5),t[e]=Math.random();const o=new i.TlE(n,3),r=new i.TlE(t,3);e.setAttribute("position",o),e.setAttribute("color",r);const a=new i.jyz({vertexShader:"void main() {\r\n    vec4 modelPosition = modelMatrix * vec4(position, 1.0);\r\n    vec4 viewPosition = viewMatrix * modelPosition;\r\n    vec4 projectedPosition = projectionMatrix * viewPosition;\r\n\r\n    gl_Position = projectedPosition;\r\n\r\n    // nastavení velikosti vertexu\r\n    gl_PointSize *= 15.0;\r\n}",fragmentShader:"void main() {\r\n    gl_FragColor = vec4(0, 1, 0, 1);\r\n}"}),s=new i.woe(e,a);d.add(s)},u.onPlay=()=>{v.rotation.set(0,0,0),p=new c.z(v,u.canvasContainer),p.enableDamping=!0},u.onReset=()=>{p&&(p.reset(),p.dispose(),p=null)},u.onTick=()=>{p.update(),u.renderer.render(d,v)};const w=new i.cPb(45,1,.1,1e3);let x;const P=new l(2,w);let h;P.onInit=()=>{m=new i.xsS,w.position.z=3,m.add(w);const e=new i.u9r,n=new Float32Array(300),t=new Float32Array(300);for(let e=0;e<n.length;e++)n[e]=10*(Math.random()-.5),t[e]=Math.random();const o=new i.TlE(n,3),r=new i.TlE(t,3);e.setAttribute("position",o),e.setAttribute("color",r);const a=new i.jyz({vertexShader:"void main() {\r\n    vec4 modelPosition = modelMatrix * vec4(position, 1.0);\r\n    vec4 viewPosition = viewMatrix * modelPosition;\r\n    vec4 projectedPosition = projectionMatrix * viewPosition;\r\n\r\n    gl_Position = projectedPosition;\r\n\r\n    // nastavení velikosti vertexu\r\n    gl_PointSize = 100.0 / -viewPosition.z;\r\n}",fragmentShader:"void main() {\r\n    gl_FragColor = vec4(0, 1, 0, 1);\r\n}"}),s=new i.woe(e,a);m.add(s)},P.onPlay=()=>{w.rotation.set(0,0,0),x=new c.z(w,P.canvasContainer),x.enableDamping=!0},P.onReset=()=>{x&&(x.reset(),x.dispose(),x=null)},P.onTick=()=>{x.update(),P.renderer.render(m,w)};const g=new i.cPb(45,1,.1,1e3);let _;const f=new l(3,g);let y;f.onInit=()=>{h=new i.xsS,g.position.z=3,h.add(g);const e=new i.u9r,n=new Float32Array(300),t=new Float32Array(300);for(let e=0;e<n.length;e++)n[e]=10*(Math.random()-.5),t[e]=Math.random();const o=new i.TlE(n,3),r=new i.TlE(t,3);e.setAttribute("position",o),e.setAttribute("color",r);const a=new i.jyz({vertexShader:"uniform float uPixelRatio;\r\n\r\nvoid main() {\r\n    vec4 modelPosition = modelMatrix * vec4(position, 1.0);\r\n    vec4 viewPosition = viewMatrix * modelPosition;\r\n    vec4 projectedPosition = projectionMatrix * viewPosition;\r\n\r\n    gl_Position = projectedPosition;\r\n\r\n    // nastavení velikosti vertexu\r\n    gl_PointSize = (100.0 * uPixelRatio) / -viewPosition.z;\r\n}",fragmentShader:"void main() {\r\n    gl_FragColor = vec4(0, 1, 0, 1);\r\n}",uniforms:{uPixelRatio:{value:f.renderer.getPixelRatio()}}}),s=new i.woe(e,a);h.add(s)},f.onPlay=()=>{g.rotation.set(0,0,0),_=new c.z(g,f.canvasContainer),_.enableDamping=!0},f.onReset=()=>{_&&(_.reset(),_.dispose(),_=null)},f.onTick=()=>{_.update(),f.renderer.render(h,g)};const E=new i.cPb(45,1,.1,1e3);let b;const z=new l(4,E);let T;z.onInit=()=>{y=new i.xsS,E.position.z=3,y.add(E);const e=new i.u9r,n=new Float32Array(300),t=new Float32Array(300);for(let e=0;e<n.length;e++)n[e]=10*(Math.random()-.5),t[e]=Math.random();const o=new i.TlE(n,3),r=new i.TlE(t,3);e.setAttribute("position",o),e.setAttribute("color",r);const a=(new i.dpR).load("../../static/img/textures/particles/star_particle.png"),s=new i.jyz({vertexShader:"uniform float uPixelRatio;\r\n\r\nvoid main() {\r\n    vec4 modelPosition = modelMatrix * vec4(position, 1.0);\r\n    vec4 viewPosition = viewMatrix * modelPosition;\r\n    vec4 projectedPosition = projectionMatrix * viewPosition;\r\n\r\n    gl_Position = projectedPosition;\r\n\r\n    // nastavení velikosti vertexu\r\n    gl_PointSize = (100.0 * uPixelRatio) / -viewPosition.z;\r\n}",fragmentShader:"uniform sampler2D uTexture;\r\n\r\nvoid main() {\r\n    gl_FragColor = vec4(0, 1, 0, texture2D(uTexture, gl_PointCoord).g);\r\n}",uniforms:{uPixelRatio:{value:z.renderer.getPixelRatio()},uTexture:{value:a}},transparent:!0}),l=new i.woe(e,s);y.add(l)},z.onPlay=()=>{E.rotation.set(0,0,0),b=new c.z(E,z.canvasContainer),b.enableDamping=!0},z.onReset=()=>{b&&(b.reset(),b.dispose(),b=null)},z.onTick=()=>{b.update(),z.renderer.render(y,E)};const C=new i.cPb(45,1,.1,1e3);let M;const R=new l(5,C);let j;R.onInit=()=>{T=new i.xsS,C.position.z=3,T.add(C);const e=new i.u9r,n=new Float32Array(300),t=new Float32Array(300);for(let e=0;e<n.length;e++)n[e]=10*(Math.random()-.5),t[e]=Math.random();const o=new i.TlE(n,3),r=new i.TlE(t,3);e.setAttribute("position",o),e.setAttribute("color",r);const a=(new i.dpR).load("../../static/img/textures/particles/star_particle.png"),s=new i.jyz({vertexShader:"uniform float uPixelRatio;\r\n\r\nvoid main() {\r\n    vec4 modelPosition = modelMatrix * vec4(position, 1.0);\r\n    vec4 viewPosition = viewMatrix * modelPosition;\r\n    vec4 projectedPosition = projectionMatrix * viewPosition;\r\n\r\n    gl_Position = projectedPosition;\r\n\r\n    // nastavení velikosti vertexu\r\n    gl_PointSize = (100.0 * uPixelRatio) / -viewPosition.z;\r\n}",fragmentShader:"uniform sampler2D uTexture;\r\n\r\nvoid main() {\r\n    gl_FragColor = vec4(0, 1, 0, texture2D(uTexture, gl_PointCoord).g);\r\n}",uniforms:{uPixelRatio:{value:R.renderer.getPixelRatio()},uTexture:{value:a}},transparent:!0,depthWrite:!1}),l=new i.woe(e,s);T.add(l)},R.onPlay=()=>{C.rotation.set(0,0,0),M=new c.z(C,R.canvasContainer),M.enableDamping=!0},R.onReset=()=>{M&&(M.reset(),M.dispose(),M=null)},R.onTick=()=>{M.update(),R.renderer.render(T,C)};const S=new i.cPb(45,1,.1,1e3);let k;const A=new l(6,S);let F;A.onInit=()=>{j=new i.xsS,S.position.z=3,j.add(S);const e=new i.u9r,n=new Float32Array(300),t=new Float32Array(300);for(let e=0;e<n.length;e++)n[e]=10*(Math.random()-.5),t[e]=Math.random();const o=new i.TlE(n,3),r=new i.TlE(t,3);e.setAttribute("position",o),e.setAttribute("color",r);const a=(new i.dpR).load("../../static/img/textures/particles/star_particle.png"),s=new i.jyz({vertexShader:"uniform float uPixelRatio;\r\n\r\nvoid main() {\r\n    vec4 modelPosition = modelMatrix * vec4(position, 1.0);\r\n    vec4 viewPosition = viewMatrix * modelPosition;\r\n    vec4 projectedPosition = projectionMatrix * viewPosition;\r\n\r\n    gl_Position = projectedPosition;\r\n\r\n    // nastavení velikosti vertexu\r\n    gl_PointSize = (200.0 * uPixelRatio) / -viewPosition.z;\r\n}",fragmentShader:"uniform sampler2D uTexture;\r\n\r\nvoid main() {\r\n    gl_FragColor = vec4(0, 1, 0, texture2D(uTexture, gl_PointCoord).g);\r\n}",uniforms:{uPixelRatio:{value:A.renderer.getPixelRatio()},uTexture:{value:a}},transparent:!0,depthWrite:!1}),l=new i.woe(e,s);j.add(l)},A.onPlay=()=>{S.rotation.set(0,0,0),k=new c.z(S,A.canvasContainer),k.enableDamping=!0},A.onReset=()=>{k&&(k.reset(),k.dispose(),k=null)},A.onTick=()=>{k.update(),A.renderer.render(j,S)};const D=new i.cPb(45,1,.1,1e3);let L;const I=new l(7,D);let O;I.onInit=()=>{F=new i.xsS,D.position.z=3,F.add(D);const e=new i.u9r,n=new Float32Array(300),t=new Float32Array(300);for(let e=0;e<n.length;e++)n[e]=10*(Math.random()-.5),t[e]=Math.random();const o=new i.TlE(n,3),r=new i.TlE(t,3);e.setAttribute("position",o),e.setAttribute("color",r);const a=(new i.dpR).load("../../static/img/textures/particles/star_particle.png"),s=new i.jyz({vertexShader:"uniform float uPixelRatio;\r\n\r\nattribute vec3 color;\r\n\r\n// varying pro předání barvy vertexu do fragment shaderu\r\nvarying vec3 vColor;\r\n\r\nvoid main() {\r\n    vec4 modelPosition = modelMatrix * vec4(position, 1.0);\r\n    vec4 viewPosition = viewMatrix * modelPosition;\r\n    vec4 projectedPosition = projectionMatrix * viewPosition;\r\n\r\n    gl_Position = projectedPosition;\r\n\r\n    // nastavení velikosti vertexu\r\n    gl_PointSize = (200.0 * uPixelRatio) / -viewPosition.z;\r\n\r\n    // předání barvy vertexu do fragment shaderu\r\n    vColor = color;\r\n}",fragmentShader:"uniform sampler2D uTexture;\r\n\r\nvarying vec3 vColor;\r\n\r\nvoid main() {\r\n    gl_FragColor = vec4(vColor, texture2D(uTexture, gl_PointCoord).g);\r\n}",uniforms:{uPixelRatio:{value:I.renderer.getPixelRatio()},uTexture:{value:a}},transparent:!0,depthWrite:!1}),l=new i.woe(e,s);F.add(l)},I.onPlay=()=>{D.rotation.set(0,0,0),L=new c.z(D,I.canvasContainer),L.enableDamping=!0},I.onReset=()=>{L&&(L.reset(),L.dispose(),L=null)},I.onTick=()=>{L.update(),I.renderer.render(F,D)};const W=new i.cPb(45,1,.1,1e3);let B,H;const N=new l(8,W);let U;N.onInit=()=>{O=new i.xsS,W.position.z=3,O.add(W);const e=new i.u9r,n=new Float32Array(300),t=new Float32Array(300);for(let e=0;e<n.length;e++)n[e]=10*(Math.random()-.5),t[e]=Math.random();const o=new i.TlE(n,3),r=new i.TlE(t,3);e.setAttribute("position",o),e.setAttribute("color",r);const a=(new i.dpR).load("../../static/img/textures/particles/star_particle.png");H=new i.jyz({vertexShader:"uniform float uPixelRatio;\r\n\r\nattribute vec3 color;\r\n\r\nvarying vec3 vColor;\r\n\r\n// uběhnutý čas od startu aplikace\r\nuniform float uElapsedTime;\r\n\r\nvoid main() {\r\n    vec4 modelPosition = modelMatrix * vec4(position, 1.0);\r\n    vec4 viewPosition = viewMatrix * modelPosition;\r\n\r\n    // změna pozice na ose X podle uběhnutého\r\n    // času a pozice částice na ose Y\r\n    viewPosition.x += sin(uElapsedTime+modelPosition.y);\r\n\r\n    vec4 projectedPosition = projectionMatrix * viewPosition;\r\n\r\n    gl_Position = projectedPosition;\r\n\r\n    gl_PointSize = (200.0 * uPixelRatio) / -viewPosition.z;\r\n\r\n    vColor = color;\r\n}",fragmentShader:"uniform sampler2D uTexture;\r\n\r\nvarying vec3 vColor;\r\n\r\nvoid main() {\r\n    gl_FragColor = vec4(vColor, texture2D(uTexture, gl_PointCoord).g);\r\n}",uniforms:{uPixelRatio:{value:N.renderer.getPixelRatio()},uTexture:{value:a},uElapsedTime:{value:0}},transparent:!0,depthWrite:!1});const s=new i.woe(e,H);O.add(s)},N.onPlay=()=>{W.rotation.set(0,0,0),B=new c.z(W,N.canvasContainer),B.enableDamping=!0},N.onReset=()=>{B&&(B.reset(),B.dispose(),B=null)},N.onTick=(e,n)=>{B.update(),H.uniforms.uElapsedTime.value=n,N.renderer.render(O,W)};const Y=new i.cPb(45,1,.1,1e3);let q,G;const V=new l(9,Y);V.onInit=()=>{U=new i.xsS,Y.position.z=3,U.add(Y);const e=new i.u9r,n=new Float32Array(300),t=new Float32Array(300);for(let e=0;e<n.length;e++)n[e]=10*(Math.random()-.5),t[e]=Math.random();const o=new i.TlE(n,3),r=new i.TlE(t,3);e.setAttribute("position",o),e.setAttribute("color",r);const a=(new i.dpR).load("../../static/img/textures/particles/star_particle.png"),s=new i.UY4({vertexColors:!0,alphaMap:a,transparent:!0,depthWrite:!1});s.onBeforeCompile=e=>{e.vertexShader=e.vertexShader.replace("#include <project_vertex>","\n            vec4 mvPosition = vec4( transformed, 1.0 );\n\n            #ifdef USE_INSTANCING\n\n                mvPosition = instanceMatrix * mvPosition;\n\n            #endif\n\n            mvPosition = modelViewMatrix * mvPosition;\n\n            // zde je řádek, který jsme do kódu přidali\n            mvPosition.x += sin(uElapsedTime+transformed.y);\n\n            gl_Position = projectionMatrix * mvPosition;\n            "),e.vertexShader="uniform float uElapsedTime; "+e.vertexShader,e.uniforms.uElapsedTime={value:0},G=e.uniforms};const l=new i.woe(e,s);U.add(l)},V.onPlay=()=>{Y.rotation.set(0,0,0),q=new c.z(Y,V.canvasContainer),q.enableDamping=!0},V.onReset=()=>{q&&(q.reset(),q.dispose(),q=null)},V.onTick=(e,n)=>{q.update(),G&&(G.uElapsedTime.value=n),V.renderer.render(U,Y)},s.init()}},t={};function i(e){var o=t[e];if(void 0!==o)return o.exports;var r=t[e]={exports:{}};return n[e](r,r.exports,i),r.exports}i.m=n,e=[],i.O=(n,t,o,r)=>{if(!t){var a=1/0;for(d=0;d<e.length;d++){for(var[t,o,r]=e[d],s=!0,l=0;l<t.length;l++)(!1&r||a>=r)&&Object.keys(i.O).every((e=>i.O[e](t[l])))?t.splice(l--,1):(s=!1,r<a&&(a=r));if(s){e.splice(d--,1);var c=o();void 0!==c&&(n=c)}}return n}r=r||0;for(var d=e.length;d>0&&e[d-1][2]>r;d--)e[d]=e[d-1];e[d]=[t,o,r]},i.d=(e,n)=>{for(var t in n)i.o(n,t)&&!i.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})},i.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e={1330:0};i.O.j=n=>0===e[n];var n=(n,t)=>{var o,r,[a,s,l]=t,c=0;if(a.some((n=>0!==e[n]))){for(o in s)i.o(s,o)&&(i.m[o]=s[o]);if(l)var d=l(i)}for(n&&n(t);c<a.length;c++)r=a[c],i.o(e,r)&&e[r]&&e[r][0](),e[r]=0;return i.O(d)},t=self.webpackChunkthreejs_navod=self.webpackChunkthreejs_navod||[];t.forEach(n.bind(null,0)),t.push=n.bind(null,t.push.bind(t))})();var o=i.O(void 0,[9365,1064],(()=>i(2828)));o=i.O(o)})();